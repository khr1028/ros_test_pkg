<?xml version="1.0"?>
<robot name="turtlebot3_waffle_sim" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="laser_visual"  default="true"/>
  <xacro:arg name="camera_visual" default="false"/>
  <xacro:arg name="imu_visual"    default="false"/>

 <!-- ==============================================================================--> 	
	
  <gazebo reference="base_link">
    <material>Gazebo/blue</material>
  </gazebo>

  <gazebo reference="wheel_left_link">
    <mu1>0.1</mu1>                       <!-- // Coefficient of friction in the range of 0..1    //--> 
    <mu2>0.1</mu2>                       <!-- // Second Coefficient of friction in the range of 0..1    //--> 
    <kp>500000.0e4</kp>                  <!-- // Dynamically "stiffness"-equivalent coefficient for contract joints    //--> 
    <kd>10.0e2</kd>                      <!-- // Dynamically "damping"-equivalent coefficient for contact joints //--> 
    <minDepth>0.001</minDepth>           <!-- // Minimum allowable depth before contact correction impulse is applied //--> 
    <maxVel>1</maxVel>                   <!-- // Maximum contact correction velocity truncation term  //--> 
    <fdir1>1 0 0</fdir1>                  <!-- // 3-tuple specifying direction of mu1 in the collision local reference frame    //--> 
    <material>Gazebo/FlatBlack</material>
  </gazebo>
 <!-- ==============================================================================--> 	

  <gazebo reference="wheel_right_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000.0e4</kp>
    <kd>10.0e2</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
 <!-- ==============================================================================--> 	

  <gazebo reference="caster_back_right_link">
    <material>Gazebo/Grey</material>
  </gazebo>
 <!-- ==============================================================================--> 	

  <gazebo reference="caster_back_left_link">
    <material>Gazebo/Grey</material>
  </gazebo>
 <!-- ==============================================================================--> 	

  <gazebo reference="caster_front_left_link">
    <material>Gazebo/Grey</material>
  </gazebo>
<!-- ==============================================================================--> 	
	
  <gazebo reference="caster_front_right_link">
    <material>Gazebo/Grey</material>
  </gazebo>
	
 <!-- ==============================================================================--> 	

  <gazebo reference="imu_link">
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <visualize>$(arg imu_visual)</visualize>
    </sensor>
    <material>Gazebo/Grey</material>
  </gazebo>
 <!-- ==============================================================================--> 	

  <gazebo>
    <plugin name="tway_controller" filename="libgazebo_ros_diff_drive.so">    <!-- //Library file   //--> 
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.64</wheelSeparation>          <!-- // Distance between 2 active wheels    //--> 
      <wheelDiameter>0.22</wheelDiameter>			  <!-- // Diameter of 2 active wheels   //--> 
      <wheelAcceleration>10</wheelAcceleration>
      <wheelTorque>5000</wheelTorque>                 <!-- // Wheel Torque   //--> 
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>
 <!-- ==============================================================================--> 	

  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>200</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>
 <!-- ==============================================================================--> 	

  <gazebo reference="laser">
    <material>Gazebo/Red</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>  					<!-- //a position and orientation with respect to the specified frame //--> 
      <visualize>$(arg laser_visual)</visualize>    <!-- //show laser lines or not //--> 
      <ray>
        <scan>
          <horizontal>
            <samples>240</samples>			<!-- //the number of simulated rays to generate per complete laser sweep cycle//--> 
            <resolution>1</resolution>   <!-- //This number is multiplied by samples to determine the number of range data points returned. --> 
			  								<!-- If the resolution is less than one, range data is interpolated. -->
			  								<!--If resolution is greater than one, range data is averaged//--> 			  
            <min_angle>-1.5</min_angle>
            <max_angle>1.5</max_angle>
          </horizontal>
        </scan>
        <range>										<!-- //Range of LiDAR//--> 
          <min>0.120</min>
          <max>10.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>laser</frameName>
        <update_rate>1800</update_rate>
      </plugin>
    </sensor>
  </gazebo>
 <!-- ==============================================================================--> 	

 <!-- ==============================================================================--> 	
  <gazebo reference="camera_rgb_frame">
    <sensor type="depth" name="realsense_R200">
      <always_on>true</always_on>
      <visualize>$(arg camera_visual)</visualize>
      <camera>
          <horizontal_fov>1.3439</horizontal_fov>
          <image>
              <width>1920</width>
              <height>1080</height>
              <format>R8G8B8</format>
          </image>
          <depth_camera></depth_camera>
          <clip>
              <near>0.03</near>
              <far>100</far>
          </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>camera</cameraName>
        <frameName>camera_rgb_optical_frame</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
 <!-- ==============================================================================--> 	

</robot>
